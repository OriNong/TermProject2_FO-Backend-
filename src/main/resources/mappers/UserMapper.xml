<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.booklog.booklogbackend.mapper.UserMapper">

    <insert id="insertUser" parameterType="com.booklog.booklogbackend.Model.vo.UserVO">
        INSERT INTO user (
            email,
            password,
            nickname,
            is_email_verified
        )
        VALUES (
                    #{email},
                    #{password},
                    #{nickname},
                    #{isVerified}
               )
    </insert>

    <select id="findByEmail" parameterType="string" resultType="com.booklog.booklogbackend.Model.vo.UserVO">
        SELECT
               user_id           AS userId,
               email             AS email,
               password          AS password,
               nickname          AS nickname,
               is_email_verified AS isVerified,
               is_active         AS isActive
        FROM user
        WHERE email = #{email}
    </select>

    <select id="findByUserId" parameterType="Long" resultType="com.booklog.booklogbackend.Model.response.UserProfileResponse">
        SELECT
            user_id             AS userId,
            email               AS email,
            nickname            AS nickname,
            is_email_verified   AS isVerified,
            is_active           AS isActive,
            created_at          AS createdAt,
            updated_at          AS updatedAt
        FROM user
        WHERE user_id = #{userId}
            AND is_active = TRUE
    </select>

    <!-- 리프레시 토큰으로 사용자 정보 조회 -->
    <select id="findByTokenId" parameterType="string" resultType="com.booklog.booklogbackend.Model.vo.UserVO">
        SELECT u.user_id           AS userId,
               u.email             AS email,
               u.password          AS password,
               u.nickname          AS nickname,
               u.is_email_verified AS isVerified,
               u.is_active         AS isActive
        FROM user u
        JOIN refresh_tokens rt ON u.user_id = rt.user_id
        WHERE rt.token_id = #{tokenId}
            AND u.is_active = TRUE
    </select>

    <!-- 이메일로 사용자 유/무 조회 -->
    <select id="existsByEmail" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE email = #{email}
    </select>

    <!-- 닉네임으로 사용자 유/무 조회 -->
    <select id="existsByNickname" parameterType="string" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM user
        WHERE nickname = #{nickname}
    </select>

    <!-- userId로 Password 조회 -->
    <select id="getPasswordById" resultType="string">
        SELECT password             -- 사용자 비밀번호
        FROM user                   -- 사용자 정보 테이블
        WHERE user_id = #{userId}
    </select>

    <!-- 사용자 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE user
        SET password = #{newPassword}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 닉네임 변경 -->
    <update id="updateNickname">
        UPDATE user
        SET nickname = #{nickname}
        WHERE user_id = #{userId}
    </update>

    <!-- 사용자 비밀번호 변경 -->
    <update id="updatePasswordByEmail">
        UPDATE user
        SET password = #{password}
        WHERE email = #{email}
    </update>
</mapper>
