<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.booklog.booklogbackend.mapper.ReviewCommentMapper">

    <!-- 리뷰에 댓글 등록 -->
    <insert id="insertComment" parameterType="com.booklog.booklogbackend.Model.vo.ReviewCommentVO">
        INSERT INTO review_comments (
                review_id,
                user_id,
                content,
                parent_comment_id
        )
        VALUES (
                #{reviewId},
                #{userId},
                #{content},
                #{parentCommentId}
               )
    </insert>

    <!-- 특정 리뷰의 댓글 조회 -->
    <select id="selectCommentsByReviewId" resultType="com.booklog.booklogbackend.Model.vo.ReviewCommentVO">
        SELECT
            c.comment_id AS commentId,
            c.review_id AS reviewId,
            c.user_id AS userId,
            u.nickname AS userNickname,
            c.content AS content,
            c.parent_comment_id AS parentCommentId,
            c.created_at AS createdAt
        FROM
            review_comments c
                JOIN
            user u ON c.user_id = u.user_id
        WHERE
            c.review_id = #{reviewId}
        ORDER BY
            c.parent_comment_id ASC, c.created_at ASC
    </select>

    <!-- 존재 여부 확인 -->
    <select id="existsByCommentIdAndUserId" resultType="boolean">
        SELECT EXISTS (
            SELECT 1
            FROM review_comments
            WHERE comment_id = #{commentId}
              AND user_id = #{userId}
        )
    </select>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment">
        DELETE FROM review_comments
        WHERE comment_id = #{commentId}
    </delete>

    <!-- 댓글 수정 -->
    <update id="updateComment">
        UPDATE review_comments
        SET content = #{content}
        WHERE comment_id = #{commentId}
    </update>

</mapper>